// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var SearchSvg = require("./images/search.svg");
var CryptonomicSvg = require("./images/cryptonomic.svg");
var Themes$ReactHooksTemplate = require("./themes.bs.js");
var ContextProvider$ReactHooksTemplate = require("./ContextProvider.bs.js");

var searchSvg = SearchSvg;

var cryptoLogo = CryptonomicSvg;

var container = Css.style(/* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.padding4(Css.px(0), Css.px(55), Css.px(45), Css.px(45)),
        /* :: */[
          Css.alignItems(Css.center),
          /* [] */0
        ]
      ]
    ]);

function input(index) {
  return Css.style(/* :: */[
              Css.height(Css.px(60)),
              /* :: */[
                Css.width(Css.px(800)),
                /* :: */[
                  Css.borderRadius(Css.px(10)),
                  /* :: */[
                    Css.padding4(Css.px(20), Css.px(24), Css.px(20), Css.px(24)),
                    /* :: */[
                      Css.color(Css.black),
                      /* :: */[
                        Css.fontSize(Css.px(18)),
                        /* :: */[
                          Css.outline(Css.px(0), Css.none, Css.transparent),
                          /* :: */[
                            Css.boxShadows(/* :: */[
                                  Css.boxShadow(Css.px(0), Css.px(4), Css.px(12), Css.px(0), undefined, Css.rgba(0, 0, 0, 0.2)),
                                  /* :: */[
                                    Css.boxShadow(Css.px(0), Css.px(4), Css.px(12), Css.px(0), undefined, Css.rgba(0, 0, 0, 0.14)),
                                    /* :: */[
                                      Css.boxShadow(Css.px(7), Css.px(4), Css.px(12), Css.px(0), undefined, Css.rgba(0, 0, 0, 0.12)),
                                      /* [] */0
                                    ]
                                  ]
                                ]),
                            /* :: */[
                              Css.border(Css.px(1), Css.solid, Css.rgba(0, 0, 0, 0.12)),
                              /* :: */[
                                Css.fontFamily("'Perfect DOS VGA 437 Win', sans-serif"),
                                /* :: */[
                                  Css.backgroundColor(Css.hex(Caml_array.caml_array_get(Themes$ReactHooksTemplate.themes, index)[/* searchBgColor */2])),
                                  /* [] */0
                                ]
                              ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

function searhBtn(index) {
  return Css.style(/* :: */[
              Css.height(Css.px(60)),
              /* :: */[
                Css.width(Css.px(60)),
                /* :: */[
                  Css.marginLeft(Css.px(15)),
                  /* :: */[
                    Css.borderRadius(Css.px(10)),
                    /* :: */[
                      Css.outline(Css.px(0), Css.none, Css.transparent),
                      /* :: */[
                        Css.backgroundColor(Css.hex(Caml_array.caml_array_get(Themes$ReactHooksTemplate.themes, index)[/* searchBgColor */2])),
                        /* [] */0
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

var cryptoImg = Css.style(/* :: */[
      Css.marginLeft(Css.px(35)),
      /* :: */[
        Css.width(Css.px(55)),
        /* :: */[
          Css.height(Css.px(55)),
          /* :: */[
            Css.cursor(/* pointer */-786317123),
            /* [] */0
          ]
        ]
      ]
    ]);

function changeBtn(index) {
  return Css.style(/* :: */[
              Css.textTransform(Css.uppercase),
              /* :: */[
                Css.marginLeft(Css.auto),
                /* :: */[
                  Css.width(Css.px(185)),
                  /* :: */[
                    Css.height(Css.px(31)),
                    /* :: */[
                      Css.fontSize(Css.px(18)),
                      /* :: */[
                        Css.color(Css.hex(Caml_array.caml_array_get(Themes$ReactHooksTemplate.themes, index)[/* mainBgColor */0])),
                        /* :: */[
                          Css.backgroundColor(Css.white),
                          /* :: */[
                            Css.boxShadows(/* :: */[
                                  Css.boxShadow(Css.px(0), Css.px(4), Css.px(12), Css.px(0), undefined, Css.rgba(0, 0, 0, 0.2)),
                                  /* :: */[
                                    Css.boxShadow(Css.px(0), Css.px(4), Css.px(12), Css.px(0), undefined, Css.rgba(0, 0, 0, 0.14)),
                                    /* :: */[
                                      Css.boxShadow(Css.px(7), Css.px(7), Css.px(0), Css.px(0), undefined, Css.hex(Caml_array.caml_array_get(Themes$ReactHooksTemplate.themes, index)[/* fieldBgColor */1])),
                                      /* [] */0
                                    ]
                                  ]
                                ]),
                            /* :: */[
                              Css.fontFamily("'Perfect DOS VGA 437 Win', sans-serif"),
                              /* [] */0
                            ]
                          ]
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]);
}

var upDown = Css.style(/* :: */[
      Css.fontSize(Css.px(20)),
      /* [] */0
    ]);

var Styles = /* module */[
  /* container */container,
  /* input */input,
  /* searhBtn */searhBtn,
  /* cryptoImg */cryptoImg,
  /* changeBtn */changeBtn,
  /* upDown */upDown
];

function Footer(Props) {
  var searhVal = Props.searhVal;
  var network = Props.network;
  var setRef = Props.setRef;
  var changeId = Props.changeId;
  var onSearch = Props.onSearch;
  var onOpenNetworkSelector = Props.onOpenNetworkSelector;
  var theme = React.useContext(ContextProvider$ReactHooksTemplate.themeContext);
  var match = React.useState((function () {
          return false;
        }));
  var setIsFirstLoad = match[1];
  var isFirstLoad = match[0];
  return React.createElement("div", {
              className: container
            }, React.createElement("input", {
                  ref: (function (ref) {
                      var ref$1 = ref;
                      Curry._1(setRef, ref$1);
                      if (!(ref$1 == null) && !isFirstLoad) {
                        Curry._1(setIsFirstLoad, (function (param) {
                                return true;
                              }));
                        return ref$1.focus();
                      } else {
                        return /* () */0;
                      }
                    }),
                  className: input(theme),
                  placeholder: "Press 's' and search by block ID, operation ID, account ID or block level",
                  value: searhVal,
                  onKeyDown: (function ($$event) {
                      var match = $$event.which;
                      if (match !== 13) {
                        return /* () */0;
                      } else {
                        return Curry._1(onSearch, /* () */0);
                      }
                    }),
                  onChange: (function ($$event) {
                      return Curry._1(changeId, $$event.target.value);
                    })
                }), React.createElement("button", {
                  className: searhBtn(theme),
                  onClick: (function (param) {
                      return Curry._1(onSearch, /* () */0);
                    })
                }, React.createElement("img", {
                      src: searchSvg
                    })), React.createElement("button", {
                  className: changeBtn(theme),
                  onClick: onOpenNetworkSelector
                }, network, React.createElement("span", {
                      className: upDown
                    }, "â‡µ")), React.createElement("img", {
                  className: cryptoImg,
                  src: cryptoLogo,
                  onClick: (function (param) {
                      window.open("https://cryptonomic.tech/", "_blank");
                      return /* () */0;
                    })
                }));
}

var make = Footer;

exports.searchSvg = searchSvg;
exports.cryptoLogo = cryptoLogo;
exports.Styles = Styles;
exports.make = make;
/* searchSvg Not a pure module */
