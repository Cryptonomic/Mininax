// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Styles1$ReactHooksTemplate = require("./Styles1.bs.js");
var ItemDisplay$ReactHooksTemplate = require("./ItemDisplay.bs.js");
var ContextProvider$ReactHooksTemplate = require("./ContextProvider.bs.js");

function Operation(Props) {
  var items = Props.items;
  var goToDetail = Props.goToDetail;
  var theme = React.useContext(ContextProvider$ReactHooksTemplate.themeContext);
  var match = React.useState((function () {
          return 0;
        }));
  var setCount = match[1];
  var count = match[0];
  var total = items.length;
  var changeLevel = function (level) {
    console.log("level", level);
    return /* () */0;
  };
  var match$1 = total > 1;
  return React.createElement("div", {
              className: Styles1$ReactHooksTemplate.container(theme)
            }, match$1 ? React.createElement("div", {
                    className: Styles1$ReactHooksTemplate.titleContainer
                  }, React.createElement("div", {
                        className: Styles1$ReactHooksTemplate.title(theme)
                      }, "Operation (" + (String(count + 1 | 0) + ("/" + (String(total) + ")")))), React.createElement("div", {
                        className: Styles1$ReactHooksTemplate.titleBtnContainer
                      }, React.createElement("div", {
                            className: Styles1$ReactHooksTemplate.transactionBtn(theme, count === 0),
                            onClick: (function (param) {
                                return Curry._1(setCount, (function (count) {
                                              return count - 1 | 0;
                                            }));
                              })
                          }, "<"), React.createElement("div", {
                            className: Styles1$ReactHooksTemplate.transactionBtn(theme, count === (total - 1 | 0)),
                            onClick: (function (param) {
                                return Curry._1(setCount, (function (count) {
                                              return count + 1 | 0;
                                            }));
                              })
                          }, ">"))) : React.createElement("div", {
                    className: Styles1$ReactHooksTemplate.title(theme)
                  }, "Operation"), React.createElement(ItemDisplay$ReactHooksTemplate.make, {
                  entity: "operation",
                  items: Caml_array.caml_array_get(items, count),
                  changeLevel: changeLevel,
                  goToDetail: goToDetail
                }));
}

var make = Operation;

exports.make = make;
/* react Not a pure module */
